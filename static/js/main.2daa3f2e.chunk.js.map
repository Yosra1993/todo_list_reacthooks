{"version":3,"sources":["components/Navbar.js","components/SignIn.js","components/ListTasks.js","components/App.js","index.js"],"names":["NavbarComponent","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","to","process","exact","activeClassName","tag","NavLinkRoute","href","localStorage","removeItem","SignIn","email","password","inputs","setInputs","handleChange","e","target","name","value","Form","style","padding","onSubmit","preventDefault","setItem","history","push","Container","FormGroup","Label","for","Input","type","id","placeholder","onChange","invalid","FormFeedback","Button","NewTask","uuidv4","title","description","edit","done","addTodo","marginTop","EditTask","Todo","useEffect","editTodo","ListTasks","JSON","parse","getItem","todos","setTodos","window","stringify","todo","map","el","ListGroup","length","ListGroupItem","index","filter","Badge","pill","newTodos","App","PrivateRoute","children","rest","render","location","pathname","state","from","path","createBrowserHistory","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.2daa3f2e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n} from \"reactstrap\";\nimport { NavLink as NavLinkRoute } from \"react-router-dom\";\n\nconst NavbarComponent = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand>Todo List</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink\n                to={process.env.PUBLIC_URL + \"/\"}\n                exact\n                activeClassName=\"active\"\n                tag={NavLinkRoute}\n              >\n                Home\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                to={process.env.PUBLIC_URL + \"/list-tasks\"}\n                exact\n                activeClassName=\"active\"\n                tag={NavLinkRoute}\n              >\n                Tâches\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                href={process.env.PUBLIC_URL + \"/\"}\n                onClick={() => {\n                  localStorage.removeItem(\"login\");\n                }}\n              >\n                Déconnexion\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavbarComponent;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport { Container, Row, Col } from \"reactstrap\";\n\nfunction SignIn(props) {\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = inputs;\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setInputs((inputs) => ({ ...inputs, [name]: value }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (email === \"test@test.com\" && password === \"test\") {\n      localStorage.setItem(\"login\", true);\n      props.history.push(\"/list-tasks\");\n    }\n  }\n\n  return (\n    <Form style={{ padding: \"100px\" }} onSubmit={handleSubmit}>\n      <Container className=\"signIn\">\n        <FormGroup>\n          <Label for=\"exampleEmail\">Adresse e-mail</Label>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            id=\"exampleEmail\"\n            placeholder=\"Entrez votre adresse email\"\n            value={email}\n            onChange={handleChange}\n            invalid={email && email !== \"test@test.com\"}\n          />\n          <FormFeedback>Adresse e-mail invalide!!</FormFeedback>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"examplePassword\">Mot de passe</Label>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            id=\"examplePassword\"\n            placeholder=\"Entrez votre Mot de passe\"\n            value={password}\n            onChange={handleChange}\n            invalid={password !== \"test\" && password}\n          />\n          <FormFeedback>Mot de passe invalide!!</FormFeedback>\n        </FormGroup>\n        <Button type=\"submit\" color=\"primary\">\n          Soumettre\n        </Button>\n      </Container>\n    </Form>\n  );\n}\n\nexport default SignIn;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  ListGroup,\n  ListGroupItem,\n  Badge,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst ListTasks = (props) => {\n  const [todos, setTodos] = useState(\n    JSON.parse(localStorage.getItem(\"List\")) || []\n  );\n  useEffect(() => {\n    window.localStorage.setItem(\"List\", JSON.stringify(todos)); // save todos to localStorage\n  }, [todos]);\n\n  const addTodo = (todo) => {\n    if (!todo.title) {\n      return;\n    }\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const deleteTodo = (index) => {\n    setTodos(todos.filter((el) => el.id != index));\n  };\n\n  const changeDone = (index) => {\n    setTodos(\n      todos.map((el) => (el.id == index ? { ...el, done: !el.done } : el))\n    );\n  };\n\n  const displayEditTodo = (index) => {\n    setTodos(\n      todos.map((el) => (el.id == index ? { ...el, edit: !el.edit } : el))\n    );\n  };\n\n  const editTodo = (todo) => {\n    setTodos(\n      todos.map((el) => (el.id == todo.id ? { ...todo, edit: false } : el))\n    );\n  };\n\n  return (\n    <div style={{ padding: \"50px\" }}>\n      <h3>List des taches</h3>\n      <ListGroup>\n        {todos && todos.length ? (\n          todos.map((el) => (\n            <ListGroupItem\n              key={el.id}\n              className=\"d-flex justify-content-between align-items-center\"\n            >\n              {el.edit ? (\n                <EditTask Todo={el} editTodo={editTodo} />\n              ) : (\n                <>\n                  <div>\n                    <span className=\"font-weight-bold pr-2\">{el.title} </span>\n                    {el.description}\n                    <span> -</span>\n                    <Button onClick={() => displayEditTodo(el.id)} color=\"link\">\n                      Modifier\n                    </Button>\n                    <Button onClick={() => deleteTodo(el.id)} color=\"link\">\n                      Supprimer\n                    </Button>\n                  </div>\n                  <Badge\n                    className=\"badge\"\n                    color={el.done ? \"success\" : \"danger\"}\n                    pill\n                    onClick={() => changeDone(el.id)}\n                  >\n                    {el.done ? \"complétée\" : \"Non complétée\"}\n                  </Badge>\n                </>\n              )}\n            </ListGroupItem>\n          ))\n        ) : (\n          <h2 className=\"empty-list\">liste de tâches vide.</h2>\n        )}\n      </ListGroup>\n      <hr />\n      <NewTask addTodo={addTodo} />\n    </div>\n  );\n};\n\nconst NewTask = (props) => {\n  const [inputs, setInputs] = useState({\n    id: uuidv4(),\n    title: \"\",\n    description: \"\",\n    edit: false,\n    done: false,\n  });\n  const { title, description } = inputs;\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setInputs((inputs) => ({ ...inputs, [name]: value }));\n  }\n\n  function handleReset(e) {\n    setInputs({\n      id: uuidv4(),\n      title: \"\",\n      description: \"\",\n      done: false,\n    });\n  }\n\n  return (\n    <div>\n      <h3>Créer une nouvelle tâche</h3>\n      <Form className=\"d-flex align-items-center pt-3\">\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n          <Label for=\"title\" className=\"mr-sm-2\">\n            Nom de la tâche\n          </Label>\n          <Input\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            value={title}\n            onChange={handleChange}\n          />\n        </FormGroup>\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n          <Label for=\"description\" className=\"mr-sm-2\">\n            Description de la tâche en une ligne\n          </Label>\n          <Input\n            type=\"text\"\n            name=\"description\"\n            id=\"description\"\n            value={description}\n            onChange={handleChange}\n          />\n        </FormGroup>\n        <Button\n          onClick={() => {\n            props.addTodo(inputs);\n            handleReset();\n          }}\n          style={{ marginTop: \"28px\" }}\n          color=\"primary\"\n        >\n          Ajouter la tâche\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nconst EditTask = (props) => {\n  const [inputs, setInputs] = useState({});\n  const { title, description } = inputs;\n  const { Todo } = props;\n\n  useEffect(() => {\n    setInputs(Todo);\n  }, [props.Todo]);\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setInputs((inputs) => ({ ...inputs, [name]: value }));\n  }\n\n  return (\n    <Form className=\"d-flex align-items-center\">\n      <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n        <Input\n          type=\"text\"\n          name=\"title\"\n          id=\"title\"\n          value={title}\n          onChange={handleChange}\n        />\n      </FormGroup>\n      <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n        <Input\n          type=\"text\"\n          name=\"description\"\n          id=\"description\"\n          value={description}\n          onChange={handleChange}\n        />\n      </FormGroup>\n      <Button\n        color=\"primary\"\n        onClick={() => {\n          props.editTodo(inputs);\n        }}\n      >\n        Enregistrer\n      </Button>\n    </Form>\n  );\n};\n\nexport default ListTasks;\n","import React, { useState } from \"react\";\nimport NavbarComponent from \"./Navbar\";\nimport SignIn from \"./SignIn\";\nimport ListTasks from \"./ListTasks\";\nimport { Redirect, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n  function PrivateRoute({ children, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n          localStorage.getItem(\"login\") ? (\n            children\n          ) : (\n            <Redirect\n              exact\n              to={{\n                pathname: \"/\",\n                state: { from: location },\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <NavbarComponent />\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => <SignIn history={props.history} />}\n        />\n        <PrivateRoute path=\"/list-tasks\">\n          <ListTasks />\n        </PrivateRoute>\n        {/* <Route exact path=\"/list-tasks\">\n          <ListTasks />\n        </Route> */}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL} history={history}> {/* Gh-pages deployment with react-router */}\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}