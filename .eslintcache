[{"/home/devagnos/Documents/test_to_do_list/src/index.js":"1","/home/devagnos/Documents/test_to_do_list/src/components/ListTasks.js":"2","/home/devagnos/Documents/test_to_do_list/src/components/SignIn.js":"3","/home/devagnos/Documents/test_to_do_list/src/components/App.js":"4","/home/devagnos/Documents/test_to_do_list/src/components/Navbar.js":"5"},{"size":549,"mtime":1610896762410,"results":"6","hashOfConfig":"7"},{"size":5226,"mtime":1610888972725,"results":"8","hashOfConfig":"7"},{"size":1830,"mtime":1610892853624,"results":"9","hashOfConfig":"7"},{"size":1015,"mtime":1610896704871,"results":"10","hashOfConfig":"7"},{"size":1560,"mtime":1610896687979,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1txbwos",{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/home/devagnos/Documents/test_to_do_list/src/index.js",[],"/home/devagnos/Documents/test_to_do_list/src/components/ListTasks.js",["24","25","26","27","28"],"/home/devagnos/Documents/test_to_do_list/src/components/SignIn.js",["29","30"],"import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport { Container, Row, Col } from \"reactstrap\";\n\nfunction SignIn(props) {\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = inputs;\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setInputs((inputs) => ({ ...inputs, [name]: value }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (email === \"test@test.com\" && password === \"test\") {\n      localStorage.setItem(\"login\", true);\n      props.history.push(\"/list-tasks\");\n    }\n  }\n\n  return (\n    <Form style={{ padding: \"100px\" }} onSubmit={handleSubmit}>\n      <Container className=\"signIn\">\n        <FormGroup>\n          <Label for=\"exampleEmail\">Adresse e-mail</Label>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            id=\"exampleEmail\"\n            placeholder=\"Entrez votre adresse email\"\n            value={email}\n            onChange={handleChange}\n            invalid={email && email !== \"test@test.com\"}\n          />\n          <FormFeedback>Adresse e-mail invalide!!</FormFeedback>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"examplePassword\">Mot de passe</Label>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            id=\"examplePassword\"\n            placeholder=\"Entrez votre Mot de passe\"\n            value={password}\n            onChange={handleChange}\n            invalid={password !== \"test\" && password}\n          />\n          <FormFeedback>Mot de passe invalide!!</FormFeedback>\n        </FormGroup>\n        <Button type=\"submit\" color=\"primary\">\n          Soumettre\n        </Button>\n      </Container>\n    </Form>\n  );\n}\n\nexport default SignIn;\n","/home/devagnos/Documents/test_to_do_list/src/components/App.js",["31"],"/home/devagnos/Documents/test_to_do_list/src/components/Navbar.js",["32","33","34","35","36"],"import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n} from \"reactstrap\";\nimport { NavLink as NavLinkRoute } from \"react-router-dom\";\n\nconst NavbarComponent = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand>Todo List</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink\n                to=\"/\"\n                exact\n                activeClassName=\"active\"\n                tag={NavLinkRoute}\n              >\n                Home\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                to=\"/list-tasks\"\n                exact\n                activeClassName=\"active\"\n                tag={NavLinkRoute}\n              >\n                Tâches\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                href=\"/\"\n                onClick={() => {\n                  localStorage.removeItem(\"login\");\n                }}\n              >\n                Déconnexion\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavbarComponent;\n",{"ruleId":"37","severity":1,"message":"38","line":31,"column":41,"nodeType":"39","messageId":"40","endLine":31,"endColumn":43},{"ruleId":"37","severity":1,"message":"41","line":36,"column":32,"nodeType":"39","messageId":"40","endLine":36,"endColumn":34},{"ruleId":"37","severity":1,"message":"41","line":42,"column":32,"nodeType":"39","messageId":"40","endLine":42,"endColumn":34},{"ruleId":"37","severity":1,"message":"41","line":48,"column":32,"nodeType":"39","messageId":"40","endLine":48,"endColumn":34},{"ruleId":"42","severity":1,"message":"43","line":173,"column":6,"nodeType":"44","endLine":173,"endColumn":18,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":10,"column":21,"nodeType":"48","messageId":"49","endLine":10,"endColumn":24},{"ruleId":"46","severity":1,"message":"50","line":10,"column":26,"nodeType":"48","messageId":"49","endLine":10,"endColumn":29},{"ruleId":"46","severity":1,"message":"51","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":25},{"ruleId":"46","severity":1,"message":"52","line":10,"column":3,"nodeType":"48","messageId":"49","endLine":10,"endColumn":23},{"ruleId":"46","severity":1,"message":"53","line":11,"column":3,"nodeType":"48","messageId":"49","endLine":11,"endColumn":17},{"ruleId":"46","severity":1,"message":"54","line":12,"column":3,"nodeType":"48","messageId":"49","endLine":12,"endColumn":15},{"ruleId":"46","severity":1,"message":"55","line":13,"column":3,"nodeType":"48","messageId":"49","endLine":13,"endColumn":15},{"ruleId":"46","severity":1,"message":"56","line":14,"column":3,"nodeType":"48","messageId":"49","endLine":14,"endColumn":13},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Todo'. Either include it or remove the dependency array.","ArrayExpression",["57"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'useState' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'NavbarText' is defined but never used.",{"desc":"58","fix":"59"},"Update the dependencies array to be: [Todo, props.Todo]",{"range":"60","text":"61"},[4352,4364],"[Todo, props.Todo]"]